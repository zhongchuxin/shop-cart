{"version":3,"sources":["redux/action-types.js","components/Products.js","components/Cart.js","components/Main.js","containers/App.js","redux/actions.js","redux/reducers.js","redux/store.js","index.js"],"names":["ADD","OUT","Products","addToCart","product","inventory","props","addtocart","products","this","list","map","index","key","title","price","className","onClick","bind","Component","Cart","checkout","cart","toFixed","Total","length","Main","connect","state","type","data","productList","cartList","combineReducers","action","newState","JSON","parse","stringify","id","concat","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.d1969cd9.chunk.js","sourcesContent":["\nexport const ADD = 'ADD'\nexport const OUT = 'OUT'","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../style/button.css'\n\nclass Products extends Component {\n    static propTypes = {\n        products:PropTypes.array.isRequired,\n        addtocart:PropTypes.func.isRequired,\n    }\n    addToCart = (product) =>{\n        // console.log(product,product.inventory)\n        if(product.inventory>0){\n            this.props.addtocart(product)\n        }\n    }\n\n    render() {\n        const products = this.props.products\n        const list = products.map((product,index) => {\n            return (\n                <ul key={index}>\n                    <li>\n                        {product.title} - $ {product.price} × {product.inventory}\n                    </li>\n                    <button className={product.inventory!==0?'':'style'} onClick={this.addToCart.bind(this,products[index])}>Add to cart</button>\n                </ul>\n            )\n        })\n        return (\n            <div>\n                <h3>Products</h3>\n                {list}\n            </div>\n        );\n    }\n}\n\nexport default Products;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../style/button.css'\n\nclass Cart extends Component {\n    static propTypes = {\n        cart:PropTypes.array.isRequired,\n        checkout:PropTypes.func.isRequired,\n    }\n    checkout = () => {\n        this.props.checkout()\n    }\n    render() {\n        const { cart } = this.props\n        // console.log(cart)\n        const list = cart.map((cart,index) => (\n            <ul key={index}>\n                <li>\n                    {cart.title} - $ {cart.price} × {cart.inventory} = $ {(cart.price*cart.inventory).toFixed(2)}\n                </li>\n            </ul>\n        ))\n        let Total = 0\n        for(let index=0;cart.length>index;index++){\n            Total += (cart[index].price*cart[index].inventory)*1\n        }\n        if(cart.length===0){\n            return (\n                <div>\n                    <h3>Your Cart</h3>\n                    <p>Please add some products to cart.</p>\n                    <p> Total : $ 0.00</p>\n                    <button className={'style'}>Checkout</button>\n                </div>\n            )\n        }else{\n            return (\n                <div>\n                    <h3>Your Cart</h3>\n                    {list}\n                    <p> Total : $ {Total.toFixed(2)}</p>\n                    <button onClick={this.checkout}>Checkout</button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Cart;","import React, { Component } from 'react'\n\nimport Products from './Products'\nimport Cart from './Cart'\n\nclass Main extends Component {\n\n    render() {\n        return (\n            <div>\n                <h1>Shopping Cart Example</h1>\n                <hr/>\n                    <Products products={this.props.products} addtocart={this.props.addtocart}/>\n                <hr/>\n                    <Cart cart={this.props.cart} checkout={this.props.checkout}/>\n            </div>\n        );\n    }\n}\n\nexport default Main;","import { connect } from 'react-redux'\n\nimport { addtocart,checkout } from '../redux/actions'\nimport Main from '../components/Main'\n\nexport default connect(\n    state => ({products:state.products,cart:state.cart}),\n    {addtocart,checkout}\n)(Main);","import { ADD,OUT } from './action-types'\n\nexport const addtocart = (product) => ({type:ADD,data:product})\nexport const checkout = () => ({type:OUT,data:[]})","import {combineReducers} from 'redux';\nimport { ADD,OUT } from './action-types'\n\nconst productList = [\n    {\"id\": 1, \"title\": \"iphone8\", \"price\": 4999, \"inventory\": 10},\n    {\"id\": 2, \"title\": \"iphoneX\", \"price\": 5999.9, \"inventory\": 15},\n    {\"id\": 3, \"title\": \"iphone 11\", \"price\": 6999.8, \"inventory\": 12}\n]\nfunction products(state = productList,action){\n    switch(action.type){\n        case ADD :\n            let newState = JSON.parse(JSON.stringify(state))\n            newState.map(product => product.id===action.data.id&&product.inventory>0? product.inventory-- :product)\n            return newState\n        default:\n            return state\n    }\n}\nconst cartList = []\nfunction cart(state = cartList,action){\n    switch(action.type){\n        case ADD :\n            let list = {...action.data,...{\"inventory\":1}}\n            let newState = JSON.parse(JSON.stringify(state))\n            if(state!==0){\n                for(let index=0;newState.length>index;index++){\n                    if(newState[index].id===list.id){\n                        newState[index].inventory++\n                        return newState\n                    }\n                }\n                return newState.concat(list)\n            }else{\n                return state.concat(list)\n            }\n        case OUT :\n            return action.data\n        default:\n            return state\n    }\n}\n    \n\n\nexport default combineReducers({\n    products,\n    cart\n});","import { createStore,applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport reducers from './reducers'\n\n// 生成store对象\nexport const store = createStore(\n    reducers,\n    composeWithDevTools(applyMiddleware(thunk))\n)","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './containers/App'\nimport { store } from './redux/store'\n\nrender((\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    ),\n    document.getElementById('root')\n)"],"sourceRoot":""}